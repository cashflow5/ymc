<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/jee  http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-lazy-init="true">
	
	<!-- 使用annotation 自动注册bean -->
	<context:component-scan base-package="com.yougou" />
		
	<!-- 开启注解 -->
	<context:annotation-config />

	<!-- 开启自动切面代理 -->
	<aop:aspectj-autoproxy />
	

	<!-- 定义受环境影响易变的变量 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath*:/config.properties</value>
				<!-- 本地开发环境配置 -->
				<value>file:/d:/yougouconf/merchant/*.properties</value>
				<!-- 服务器生产环境配置 -->
				<value>file:/etc/yougouconf/merchant/*.properties</value>
			</list>
		</property>
	</bean>    
	
	<bean id="parentDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" abstract="true" destroy-method="close">
		<property name="minPoolSize"><value>10</value></property>
		<property name="maxPoolSize"><value>200</value></property>
		<property name="initialPoolSize"><value>10</value></property>
		<property name="maxIdleTime"><value>60</value></property>
		<property name="acquireIncrement"><value>5</value></property>

		<property name="idleConnectionTestPeriod"><value>50</value></property>
		<property name="acquireRetryAttempts"><value>30</value></property>
		<property name="breakAfterAcquireFailure"><value>false</value></property>

		<property name="numHelperThreads"><value>5</value></property>
		<property name="acquireRetryDelay"><value>500</value></property>
		<property name="autoCommitOnClose"><value>true</value></property>
		<property name="propertyCycle"><value>300</value></property>
		<property name="checkoutTimeout"><value>8000</value></property>
	</bean>
	<bean id="masterDataSource" parent="parentDataSource">
		<property name="driverClass" value="${master.jdbc.driver}" />
		<property name="jdbcUrl" value="${master.jdbc.url}" />
		<property name="user" value="${master.jdbc.username}" />
		<property name="password" value="${master.jdbc.password}" />
	</bean>
	<bean id="slaveDataSource" parent="parentDataSource">
		<property name="driverClass" value="${slave.jdbc.driver}" />
		<property name="jdbcUrl" value="${slave.jdbc.url}" />
		<property name="user" value="${slave.jdbc.username}" />
		<property name="password" value="${slave.jdbc.password}" />
	</bean>

	<bean id="dataSource" class="com.yougou.merchant.core.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="slave" value-ref="slaveDataSource" />
				<entry key="master" value-ref="masterDataSource" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="slaveDataSource" />
	</bean>

	<!-- JDBC 据源事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath*:com/yougou/merchant/api/*/dao/mapper/*.xml" />
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yougou.merchant.api.*.dao" />
	</bean>
	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="32"></property>
		<property name="maxIdle" value="6"></property>
		<property name="maxWait" value="1000"></property>
		<property name="testOnBorrow" value="false"></property>
	</bean>

	<!-- Jedis ConnectionFactory -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" p:host-name="${redis.host}" p:port="${redis.port}">
		<property name="poolConfig" ref="jedisPoolConfig"></property>
	</bean>

	<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

    <!-- redis template definition -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory">
	    <property name="keySerializer" ref="stringRedisSerializer"/>
	    <property name="hashKeySerializer" ref="stringRedisSerializer"/>
	</bean>
	
	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" p:connection-factory-ref="jedisConnectionFactory"/>
</beans>